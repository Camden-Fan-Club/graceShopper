// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users{
  id Int @id @default(autoincrement())
  username String @unique
  password String
  email String @unique 
  is_admin Boolean? @default(false)
  orders Orders[]
  reviews Reviews[]

  // make username email unique

}

model Orders{
  id Int @id @default(autoincrement())
  userId Int? 
  status String? @default("Incomplete")
  is_cart Boolean? @default(true)
users Users? @relation(fields: [userId], references: [id])
order_items Order_Items[]
}

model Items{
  id Int @id @default(autoincrement())
  name String
  description String
  price Int
  stockQty Int
  isFeatured Boolean @default(false)
  onSale Boolean @default(false)
  imageUrl String
  categoryId Int
  order_items Order_Items[]
  item_reviews Item_Reviews[]
  categories Categories? @relation(fields: [categoryId], references: [id])


}

model Order_Items{
id Int @id @default(autoincrement())
orderId Int
itemId Int
quantity Int? @default(1)
orders Orders? @relation(fields: [orderId], references: [id])
items Items? @relation(fields: [itemId], references: [id])
@@unique([orderId, itemId])

}

model Reviews{
  id Int @id @default(autoincrement())
  title String
  stars Int 
  content String
  userId Int

  item_reviews Item_Reviews[]
  users Users? @relation(fields: [userId], references: [id])
  
}

model Item_Reviews{
  id Int @id @default(autoincrement())
  itemId Int?
  reviewId Int?
items Items? @relation(fields: [itemId], references: [id])
reviews Reviews? @relation(fields: [reviewId], references: [id])
@@unique([reviewId, itemId])
}

model Categories{
  id Int @id @default(autoincrement())
  name String
  items Items[]
}